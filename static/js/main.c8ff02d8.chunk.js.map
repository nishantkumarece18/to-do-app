{"version":3,"sources":["logo.svg","ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","item","items","map","className","type","value","text","onChange","e","setUpdate","target","key","icon","faTrash","onClick","deleteItem","duration","easing","App","handleInput","setState","currentItem","Date","now","addItem","preventDefault","newItem","state","newItems","temp","filter","id","onSubmit","this","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAAe,I,yCCmCAA,MA7Bf,SAAkBC,GAEd,IACMC,EADQD,EAAME,MACDC,KAAI,SAAAF,GACnB,OACI,sBAAKG,UAAU,OAAf,UACI,uBACIC,KAAK,OACLC,MAAOL,EAAKM,KACZC,SAAU,SAACC,GACPT,EAAMU,UAAUD,EAAEE,OAAOL,MAAOL,EAAKW,QAI7C,cAAC,IAAD,CAAiBC,KAAMC,IAASC,QAAS,kBAAMf,EAAMgB,WAAWf,EAAKW,MAAMR,UAAU,WAT9DH,EAAKW,QAexC,OACI,qBAAKR,UAAU,aAAf,SACI,cAAC,IAAD,CAAUa,SAAU,IAAKC,OAAO,cAAhC,SACKjB,OCwDFkB,E,kDA7Eb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAURoB,YAAc,SAACX,GACb,EAAKY,SAAS,CACZC,YAAa,CACXf,KAAME,EAAEE,OAAOL,MACfM,IAAKW,KAAKC,UAfG,EAoBnBC,QAAU,SAAChB,GACTA,EAAEiB,iBACF,IAAMC,EAAU,EAAKC,MAAMN,YAC3B,GAAoB,IAAhBK,EAAQpB,KAAY,CACtB,IAAMsB,EAAQ,sBAAO,EAAKD,MAAM1B,OAAlB,CAAyByB,IAEvC,EAAKN,SAAS,CACZnB,MAAO2B,EACPP,YAAa,CACXf,KAAM,GACNK,IAAK,QA9BM,EAqCnBI,WAAa,SAACJ,GACZ,IAAMkB,EAAO,EAAKF,MAAM1B,MAAM6B,QAAO,SAAA9B,GAAI,OAAIA,EAAKW,MAAQA,KAC1D,EAAKS,SAAS,CACZnB,MAAO4B,KAxCQ,EA4CnBpB,UAAY,SAACH,EAAMK,GACjB,IAAMkB,EAAO,EAAKF,MAAM1B,MACxB4B,EAAK3B,KAAI,SAAAF,GACHA,EAAKW,MAAQA,IACfX,EAAKM,KAAOA,MAGhB,EAAKc,SAAS,CACZnB,MAAO4B,KAlDT,EAAKF,MAAQ,CACX1B,MAAO,GACPoB,YAAa,CACXf,KAAM,GACNK,IAAK,KANQ,E,0CAwDnB,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,iCACE,uBAAM4B,GAAG,aAAaC,SAAUC,KAAKT,QAArC,UACE,uBACEpB,KAAK,OACL8B,YAAY,aACZ7B,MAAO4B,KAAKN,MAAMN,YAAYf,KAC9BC,SAAU0B,KAAKd,cAEjB,wBAAQf,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAUH,MAAOgC,KAAKN,MAAM1B,MAAOc,WAAYkB,KAAKlB,WAAYN,UAAWwB,KAAKxB,mB,GAxEtE0B,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8ff02d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItem.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport Flipmove from 'react-flip-move';\r\n\r\nfunction ListItem(props) {\r\n\r\n    const items = props.items;\r\n    const item = items.map(item => {\r\n        return (\r\n            <div className='list' key={item.key}>\r\n                <input\r\n                    type='text'\r\n                    value={item.text}\r\n                    onChange={(e) => {\r\n                        props.setUpdate(e.target.value, item.key)\r\n                    }}\r\n\r\n                />\r\n                <FontAwesomeIcon icon={faTrash} onClick={() => props.deleteItem(item.key)} className='icon' />\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className='list-items'>\r\n            <Flipmove duration={500} easing=\"ease-in-out\">\r\n                {item}\r\n            </Flipmove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ListItem from './ListItem';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    }\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem = (e) => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if (newItem.text != \"\") {\n      const newItems = [...this.state.items, newItem];\n      // console.log(newItems);\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n    // console.log(this.state.items)\n  }\n\n  deleteItem = (key) => {\n    const temp = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: temp\n    });\n  }\n\n  setUpdate = (text, key) => {\n    const temp = this.state.items;\n    temp.map(item => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: temp\n    });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <header>\n          <form id='to-do-form' onSubmit={this.addItem}>\n            <input\n              type='text'\n              placeholder='Enter Text'\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n            <button type='submit'>Add</button>\n          </form>\n        </header>\n        <ListItem items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate} />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}